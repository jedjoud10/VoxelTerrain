#pragma kernel CSPropCullingApply
#define UNITY_INDIRECT_DRAW_ARGS IndirectDrawIndexedArgs
#include "UnityIndirect.cginc"

int propCount;
RWStructuredBuffer<uint> culledCount;
RWStructuredBuffer<UNITY_INDIRECT_DRAW_ARGS> drawArgs;

// Do some culling on the props and save them to the culled props buffer
[numthreads(32, 1, 1)]
void CSPropCullingApply(uint3 id : SV_DispatchThreadID)
{
	if (id.x < (uint)propCount) {
		IndirectDrawIndexedArgs args;
		args.indexCountPerInstance = 6;
		args.instanceCount = culledCount[id.x];
		
		if (id.x == 1) {
			//args.instanceCount = 0;
		}

		args.startIndex = 0;
		args.baseVertexIndex = 0;
		
		// normally I'd have the visibility offset applied here but it seems to not work
		// so I'm manually adding it in the fucking shader graph custom func
		// Unity why do you have to be so FUCKING annoying sometimes?
		// Can't have shit mate
		args.startInstance = 0;
		drawArgs[id.x] = args;
	}
}