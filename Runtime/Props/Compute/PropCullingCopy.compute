#pragma kernel CSPropCullingCopy
#define UNITY_INDIRECT_DRAW_ARGS IndirectDrawIndexedArgs
#include "UnityIndirect.cginc"
#include "Packages/com.jedjoud.voxelterraingenerator/Runtime/Utils/PropPackUtils.cginc"

RWStructuredBuffer<uint> culledCount;
StructuredBuffer<uint4> permProps;

RWStructuredBuffer<uint4> culledProps;
StructuredBuffer<uint> usedBitmask;

StructuredBuffer<int> propSectionPermOffsets;
StructuredBuffer<int> propSectionVisibleOffsets;

float3 cameraForward;
float3 cameraPosition;

// Do some culling on the props and save them to the culled props buffer
[numthreads(32, 1, 1)]
void CSPropCullingCopy(uint3 id : SV_DispatchThreadID)
{
	uint permOffset = propSectionPermOffsets[id.y];
	uint visibleOffset = propSectionVisibleOffsets[id.y];
	uint inputIndex = id.x + permOffset;

	float4 positionScale = UnpackPositionAndScale(permProps[inputIndex].xy);

	uint block = inputIndex / 32;
	uint local = inputIndex % 32;
	bool valid = ((usedBitmask[block] >> local) & 1) == 1;

	bool visible = dot(normalize(cameraPosition - positionScale.xyz), cameraForward) < 0;

	if (visible && valid) {
		int index;
		InterlockedAdd(culledCount[id.y], 1, index);
		culledProps[index + visibleOffset] = permProps[inputIndex];
	}
}