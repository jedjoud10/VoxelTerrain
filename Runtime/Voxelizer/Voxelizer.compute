#pragma kernel CSVoxelizer
#include "./noises.cginc"

// Used for async readback
RWTexture3D<float> voxelTexture;

// Chunk offset + scale
float3 chunkOffset;
float chunkScale; 

// World parameters
float3 worldOffset;
float3 worldScale;
float isosurfaceOffset;

[numthreads(4,4,4)]
void CSVoxelizer (uint3 id : SV_DispatchThreadID)
{
    float3 position = (id.xzy * chunkScale + chunkOffset) * worldScale + worldOffset;

    float density1 = -pow(fbmCellular(position * 0.01 * float3(1, 1.8, 1), 5, 0.5, 2).x, 3.0) * 200;
    density1 = min(position.y, density1);
    float density2 = fbm(position * 0.01 * float3(1, 3, 1), 6, 0.4, 2.2) * 22;

    float density = lerp(density1, density2, snoise(position * 0.0002) * 0.5 + 0.5) + position.y;
    voxelTexture[id.xyz] = density + isosurfaceOffset;
}
