#pragma kernel CSVoxelizer
#include "./noises.cginc"

RWTexture3D<float> voxelTexture;
float4 offset;

float2 rotate(float2 v, float a) {
	float s = sin(a);
	float c = cos(a);
	float2x2 m = float2x2(c, -s, s, c);
	return mul(v, m);
}

[numthreads(4,4,4)]
void CSVoxelizer (uint3 id : SV_DispatchThreadID)
{
    float3 position = id.xzy + offset.xyz;

    float density1 = -pow(fbmCellular(position * 0.01 * float3(1, 1.8, 1), 5, 0.5, 2).x, 3.0) * 200;
    density1 = min(position.y, density1);
    float density2 = fbm(position * 0.01 * float3(1, 3, 1), 6, 0.4, 2.2) * 12;

    float density = lerp(density1, density2, snoise(position * 0.003) * 0.5 + 0.5) + position.y;

    /*
    if (length(position) < 50.0) {
        density = snoise(position * 0.1) + length(position) - 20;
        density = min(density, abs(position.x) - 1);
        density = min(density, abs(position.z) - 1);
        density = min(density, position.y);
        density -= cellular(position * 0.1).y * 2;
    }
    */


    voxelTexture[id.xyz] = density + 5;
}
